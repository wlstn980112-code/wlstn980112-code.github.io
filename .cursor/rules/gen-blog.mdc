---
alwaysApply: true
description: "블로그 주제를 입력하면 최신 정보를 검색하여 @pages 폴더에 마크다운 형식의 블로그 포스트를 자동으로 생성합니다."
---

when: "사용자가 블로그 주제나 키워드를 입력하고 블로그 작성을 요청할 때 (예: 'React 19에 대해 블로그 작성해줘', 'AI 트렌드 블로그 포스트 만들어줘')"
then: |

1. 입력된 주제에 대해 최신 정보를 검색하기 위해 mcp_tavily-mcp_tavily-search 도구를 사용합니다.

2. 검색 결과를 분석하여 블로그 포스트의 구조를 생성합니다:

   - 제목: 주제 + "완벽 가이드 - 2025 최신 업데이트"
   - 날짜: 오늘 날짜 (YYYY-MM-DD 형식)
   - 태그: 주제 관련 키워드 + 검색 결과에서 추출한 태그들
   - 카테고리: 주제에 따라 자동 분류 (개발, 기술, 일반 등)
   - 설명: 검색 결과의 첫 번째 내용을 요약

3. 블로그 콘텐츠를 다음 섹션으로 구성합니다:

   - 📚 개요: 주제에 대한 간단한 소개
   - 🔍 최신 동향: 검색 결과에서 추출한 최신 트렌드
   - 💡 주요 특징: 검색 결과에서 추출한 주요 기능/장점
   - 📝 실전 적용: 코드 예제와 실무 적용 사례
   - 🔗 참고 자료: 검색 결과의 출처 링크들

4. @pages 폴더의 기존 포스트 형식을 따라 마크다운 파일을 생성합니다 (front matter + 내용).

5. write 도구를 사용하여 파일을 pages 폴더에 저장합니다.

6. [필수] 자동 업로드: `posts.json`에 방금 생성한 포스트의 메타데이터를 즉시 추가합니다.

   - file/title/date/tags/category/description/excerpt 값은 front matter에서 추출
   - 최신순 노출을 위해 배열 맨 앞에 삽입

7. [선택] GitHub Pages 사용 시 자동 배포를 위해 커밋/푸시를 수행합니다.

   - commit 메시지: `chore(posts): add <파일명>`
   - push: 기본 브랜치로 푸시

8. 완료 메시지를 표시합니다.

예시 사용법:

- "React 19 블로그 작성해줘"
- "AI 최신 트렌드에 대해 포스트 만들어줘"
- "TypeScript 고급 기능 블로그 포스트 생성"
